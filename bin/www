#!/usr/mapleKum/server/bin/env node

var app = require('../app');
var debug = require('debug')('exp:mapleKum');
var http = require('http');

var port = normalizePort(process.env.PORT || '5000');
app.set('port', port);

var server = http.createServer(app);

server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

function normalizePort(val) {
    var port = parseInt(val, 10);

    if(isNaN(port)) return val;

    if(port >= 0) return port;
    return false;
}

function onError(error) {
    if(error.syscall !== 'listen') {
        throw error;
    }

    var bind = typeof port === 'string'
        ? 'pipe ' + port
        : 'port ' + port;
    
    switch (error.code) {
        case 'EACCES' :
            console.error(bind + ' requires elevated privilieges');
            process.exit(1);
            break;
        case 'EDADDRINIUSE' :
            console.error(bind + ' is already in use');
            process.exit(1);
            break;
        default:
            throw error;
    }
}

function onListening() {
    var addr = server.address();
    var bind = typeof addr === 'string'
        ? 'pipe ' + addr
        : 'port ' + addr.port;
    debug('Listening on ' + bind);
}
